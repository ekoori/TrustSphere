version: '3.8'

services:
  cassandra:
    image: cassandra:latest
    container_name: cassandra
    hostname: cassandra
    networks:
      - cassandra-network
    ports:
      - "9042:9042"  # Expose Cassandra's port
    volumes:
      - cassandra_data:/var/lib/cassandra  # Persistent data storage
      - ./cassandra.yaml:/etc/cassandra/cassandra.yaml  # Custom configuration
      - ./schema.cql:/scripts/schema.cql  # Schema file
      - ./import_dummy_data.sh:/scripts/import_dummy_data.sh
      - ./dummy_data:/dummy_data
      - cassandra_flags:/scripts  # Persistent volume for the flag file
    environment:
      - CASSANDRA_CLUSTER_NAME=TrustSphere
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES;' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always  # Automatically restart on system reboot or failure

  schema-setup:
    image: cassandra:latest
    container_name: cassandra-schema
    depends_on:
      cassandra:
        condition: service_healthy
    networks:
      - cassandra-network
    volumes:
      - ./schema.cql:/scripts/schema.cql  # Mount schema file for use
      - ./dummy_data:/dummy_data  # Directory with CSV files
      - ./import_dummy_data.sh:/scripts/import_dummy_data.sh  # Import script
      - cassandra_flags:/scripts  # Persistent volume for the flag file
    environment:
      - CQLSH_HOST=cassandra
      - CQLSH_PORT=9042
      - CQLVERSION=3.4.7
    entrypoint: ["/bin/bash", "-c", "/scripts/import_dummy_data.sh"]
    restart: "no"  # Runs once to apply the schema

  cqlsh:
    image: cassandra:latest
    container_name: cassandra-cli
    networks:
      - cassandra-network
    environment:
      - CQLSH_HOST=cassandra
      - CQLSH_PORT=9042
      - CQLVERSION=3.4.7
    entrypoint: ["cqlsh", "cassandra", "9042", "--cqlversion=3.4.7"]

networks:
  cassandra-network:
    driver: bridge

volumes:
  cassandra_data:
  cassandra_flags:



